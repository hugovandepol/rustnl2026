---
import Icon from "../Icon.astro";

interface Props {
  name?: string;
  image?: string;
  title?: string;
  description?: string; // bio
  link?: string;
  tracks?: Array<string>;
  url?: string;
  linkedin?: string;
  twitter?: string;
  mastodon?: string;
  github?: string;
  bluesky?: string;
  tile?: boolean;
  smalltile?: boolean;
}

const {
  name,
  image,
  description,
  title,
  link,
  tracks,
  url,
  linkedin,
  twitter,
  mastodon,
  github,
  bluesky,
  tile = false,
  smalltile = false,
} = Astro.props;

function convertTrack(i: string): string {
  switch (i) {
    case "deep_dive":
      return "deep dive track";
    case "main":
      return "main track";
    case "project":
      return "project track";
    case "ecosystem":
      return "ecosystem track";
    case "industry":
      return "industry track";
  }

  return i;
}

const speakers = [];
let github_of_person = null;

outer: for (const i of speakers) {
  for (const speaker of i.frontmatter.speakers) {
    if (speaker.name === name && speaker.github && speaker.github !== "") {
      if (!speaker.github.includes("https://github.com")) {
        github_of_person = `https://github.com/${speaker.github}`;
      } else {
        github_of_person = speaker.github.replace(/\/$/g, "");
      }
      break outer;
    }
  }
}

if (
  (image === null || typeof image === "undefined") &&
  github_of_person === null &&
  typeof github !== "undefined" &&
  github !== null
) {
  github_of_person = github.replace(/\/$/g, "");
}

const empty_path = "/images/people/empty.png";

const imageFile = image
  ? `/images/people/${image}`
  : github_of_person
    ? `${github_of_person}.png`
    : empty_path;
---

<div
  class:list={[
    "person space-y-6",
    tile ? "tile" : smalltile ? "small-tile" : "detail",
  ]}
>
  <div class="image-container">
    {
      link ? (
        <div>
          <div class="image">
            <a href={link}>
              <img
                src={`${imageFile}`}
                alt={`Picture of ${name}`}
                class={imageFile == empty_path ? "empty" : null}
              />
            </a>
          </div>
        </div>
      ) : (
        <div>
          <div class="image">
            <img
              src={`${imageFile}`}
              alt={`Picture of ${name}`}
              class={imageFile == empty_path ? "empty" : null}
            />
          </div>
        </div>
      )
    }
    <div class="tags">
      {
        tracks &&
          tracks.map((track) => (
            <span class={`tag ${track}`}>
              <span>{convertTrack(track)}</span>
            </span>
          ))
      }
    </div>
  </div>
  <div class="person-info">
    <h3>{name}</h3>
    {title && <div class="title">{title}</div>}
    {
      !(tile || smalltile) && (
        <div class="socials">
          {linkedin && (
            <a href={linkedin}>
              <Icon name="linkedin" />
            </a>
          )}
          {twitter && (
            <a href={twitter}>
              <Icon name="x" />
            </a>
          )}
          {mastodon && (
            <a href={mastodon}>
              <Icon name="mastodon" />
            </a>
          )}
          {github && (
            <a href={github}>
              <Icon name="github" />
            </a>
          )}
          {bluesky && (
            <a href={bluesky}>
              <Icon name="bluesky" />
            </a>
          )}
          {url && (
            <a href={url}>
              <Icon name="website" />
            </a>
          )}
        </div>
      )
    }
    {
      !(tile || smalltile) && description && (
        <div class="bio" set:html={description} />
      )
    }
    <slot />
  </div>
</div>

<style lang="scss">
  @use "../../styles/variables.scss";

  .person {
    border: 1px solid variables.$color-neutral-400;
    padding: variables.space(4);
    position: relative;
  }

  .person .image-container {
    position: relative;
  }

  .person .image {
    aspect-ratio: 1;
    border-radius: 50% 0 50% 0;
    overflow: clip;
    position: relative;
  }

  .person .image img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .person .title {
    font-size: variables.$font-size-md;
  }

  .person .tags {
    display: flex;
    flex-wrap: wrap;
    gap: variables.space(2);
    position: absolute;
    bottom: variables.space(2);
    left: variables.space(2);
  }

  .person .tag {
    align-items: center;
    background-color: variables.$color-blue-400;
    border-radius: variables.space(1);
    display: flex;
    font-size: variables.$font-size-md;
    line-height: 1;
    min-height: variables.space(8);
    padding-inline: variables.space(3);

    &.project {
      background-color: variables.$color-red-400;
    }

    &.industry,
    &.gosim-spotlight {
      background-color: variables.$color-yellow-400;
    }
  }
</style>
