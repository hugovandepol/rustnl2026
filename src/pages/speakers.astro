---
import SpeakersLayout from "../layouts/SpeakersLayout.astro";
import SpeakerDetail from "../components/speaker-detail.astro";
---

<SpeakersLayout>
    <Fragment slot="speakers">
        <SpeakerDetail
            name="Mara Bos"
            image="mara.jpg"
            title="Library team & Leadership council"
            talkTitle="Tba"
            talkAbstract="Tba"
            linkedin="https://www.linkedin.com/in/mara-bos-a04727b2/"
            twitter="https://twitter.com/m_ou_se"
            mastodon="https://hachyderm.io/@Mara"
            github="https://github.com/m-ou-se"
        />
        <SpeakerDetail
            name="Raph Levien"
            image="raph.jpg"
            title="Research engineer at Google"
            talkTitle="Tba"
            talkAbstract="Xilem is a new UI toolkit designed for high performance and idiomatic expression of UI and app logic, suitable for both desktop and mobile. Xilem is built in a layered architecture. At the top is a reactive layer where views are simple statically typed Rust structs (though type erasure is possible), and no macros are needed. The widget layer is evolved from Druid. At the infrastructure layer is Vello, a 2D rendering engine using GPU compute shaders, specially tuned for dynamic vector graphics content. The text stack is also tuned for performance, including supporting animation of variable font parameters. Accessibility is a primary goal, and integration with AccessKit is baked in from the start. Another goal is interop with other projects in the Rust ecosystem, including wgpu, and providing a clean abstraction layer for widgets. It is work in progress, with a strong open source community driving toward ambitious goals."
            bio="Raph Levien is a research software engineer on the Google Fonts team, primarily working on GPU font rendering. He’s been actively involved in the Rust community for over seven years, and has worked on pulldown-cmark, the Druid UI toolkit, and other popular crates. He has a PhD from UC Berkeley on the topic of interactive curve editing, and has been involved in font creation and 2D graphics tools most of his career."
            linkedin="https://www.linkedin.com/in/raph-levien-0484504/"
            twitter=""
            mastodon="https://mastodon.online/@raph"
            github="https://github.com/raphlinus"
        />
        <SpeakerDetail
            name="Dario Nieuwenhuis"
            image="dario.jpg"
            title="Akiles CTO & Embassy project lead"
            talkTitle="Tba"
            talkAbstract="Tba"
            linkedin="https://www.linkedin.com/in/dario-nieuwenhuis-142331125/"
            twitter="https://twitter.com/dirbaio"
            mastodon="https://mastodon.social/@dirbaio@hachyderm.io"
            github="https://github.com/Dirbaio"
        />
        <SpeakerDetail
            name="Michael Melchiore"
            image="michaelmelchiore.jpg"
            title="On-Board Processing Specialist @ Airbus"
            talkTitle="Tba"
            talkAbstract="Tba"
            linkedin="https://www.linkedin.com/in/michael-melchiore-885aa6128/"
            twitter=""
            mastodon=""
            github=""
        />
        <SpeakerDetail
            name="Niko Matsakis"
            image="niko.png"
            title="Language team co-lead & Senior Principal Engineer @ AWS"
            talkTitle="Tba"
            talkAbstract="Tba"
            linkedin=""
            twitter="https://twitter.com/nikomatsakis"
            mastodon=""
            github="https://github.com/nikomatsakis"
        />
        <SpeakerDetail
            name="Joe Birr-Pixton"
            image="joe.jpg"
            title="Security and Embedded Engineer & Creator of Rustls"
            talkTitle="Replacing OpenSSL, once step at a time"
            talkAbstract="rustls-libssl is a new project that provides a drop-in replacement for OpenSSL's libssl, with the goal of easy retrofitting of memory-safe TLS into existing applications. The talk will start with a general overview of recent work on rustls and then introduce rustls-libssl. We'll dive into some of the challenges Joe has encoutered, like 1) various depraved details of the openssl API that mad this project particularly challenging, 2) building a shared library from rust, with correctly versioned symbols, 3) writing rust emulatoins of your native dependencies so miri so it can run all your tests."
            linkedin="https://www.linkedin.com/in/joseph-birr-pixton-56149856/"
            twitter="https://twitter.com/jpixton/"
            mastodon=""
            github="https://github.com/ctz"
        />
        <SpeakerDetail
            name="Kevin Boos"
            image="kevin.jpg"
            title="Creator and lead developer of Theseus OS & Principal Architect @ Futurewei"
            talkTitle="Robius: Immersive and Seamless Multi-platform App Development in Rust"
            talkAbstract="Project Robius is a new community-driven framework that enables developers to create robust, efficient, and immersive applications in Rust that seamlessly run on many platforms, including desktop, mobile, and web. In this talk, we’ll describe our ongoing work to improve the Rust app dev experience, including a brief overview of key constituent projects like the Makepad UI toolkit and the Osiris project for abstracting platform APIs and OS services. We’ll also demonstrate some applications written using the Robius framework, namely Robrix, a new Matrix chat client app that runs on mobile and desktop. Finally, we’ll conclude with a roadmap for our future technical plans, along with more info on how you can join the community and get involved in the world of Rust app dev. "
            linkedin="https://www.linkedin.com/in/kevinaboos/"
            twitter=""
            mastodon=""
            github="https://github.com/kevinaboos"
        />
        <SpeakerDetail
            name="Jonas Kruckenberg"
            image="jonas.jpg"
            title="Member of the Tauri Team & R&D @ CrabNebula"
            talkTitle="K23: A secure research OS running WASM"
            talkAbstract="K23 offers a fresh look a OS design. It is entirely written in Rust with an integrated WASM JIT compiler that tries to answer what an OS built for the 21st century could look like. We will cover the general ideas behind K23 and its inspirations. We'll go over the project progress so far, and detail a few points that are of interest to the Rust crowd: various nightly features used, custom debugging tools, and a few stories from embedded Rust development."
            linkedin=""
            twitter="https://twitter.com/jonaskruckie"
            mastodon="https://m.webtoo.ls/@unsafe"
            github="https://github.com/JonasKruckenberg"
        />
        <SpeakerDetail
            name="James Munns"
            image="james.jpg"
            title="Embedded, systems and Rust consultant & Managing Director @ OneVariable UG"
            talkTitle="Postcard: an unreasonably effective tool for machine to machine communication"
            talkAbstract="Postcard is a binary wire format, a crate providing a `serde` backend, and a growing ecosystem of tools for getting computers, even small embedded ones, productively talking to each other. This talk explores where postcard came from, how it is used today, and how you can use it for building quick, pragmatic, and effective communication protocols for your projects."
            linkedin="https://www.linkedin.com/in/james-munns-8a42b429/"
            twitter=""
            mastodon=""
            github="github.com/jamesmunns"
        />
        <SpeakerDetail
            name="Rik Arends"
            image="rik.jpeg"
            title="Founder @ Makepad"
            talkTitle="Visual application design for Rust"
            talkAbstract="In this talk I will show the new MIT licensed visual application design tool for Makepad. We will walk through our fun new AI examples with generative image and text models and look at the lessons learned developing these applications in Rust."
            linkedin="https://www.linkedin.com/in/arendsrik/"
            twitter="https://twitter.com/rikarends"
            mastodon=""
            github="https://github.com/makepad/makepad"
        />
        <SpeakerDetail
            name="Henk Oordt"
            image="henk.png"
            title="Rust trainer & Embedded software engineer"
            talkTitle="Oxidizing Education"
            talkAbstract="For Rust to really take off, we have a cycle to break: companies need Rust developers to start doing Rust, and developers need Rust jobs to start learning Rust. To break the cycle, we can oxidize education: enable universities to start teaching Rust. This talk is about how we can do just that."
            linkedin="https://www.linkedin.com/in/hdoordt/"
            twitter="https://twitter.com/hdoordt"
            mastodon=""
            github="https://github.com/hdoordt/"
        />
        <SpeakerDetail
            name="Folkert de Vries"
            image="folkert.jpg"
            title="Systems software engineer @ Tweede golf"
            talkTitle="Compression carcinized: implementing zlib in Rust"
            talkAbstract="Data compression is used when loading almost anything on the web. This talk is about the implementation of zlib-rs. We'll explore how compression works, how to convert a C project to rust, maintain its performance, and foster adoption."
            linkedin="https://www.linkedin.com/in/folkert-de-vries-24ab691b7/"
            twitter=""
            mastodon=""
            github="https://github.com/folkertdev"
        />
        <SpeakerDetail
            name="Leon Schuermann"
            image="leon.jpeg"
            title="PhD Candidate in Computer Science @ Princeton University"
            talkTitle="Fortifying Rust's FFI with Encapsulated Functions"
            talkAbstract="Memory- and type-safe languages like Rust are increasingly popular for systems development. Nonetheless, practical systems must interact with code written in memory-unsafe languages. Examples for this can be found across the spectrum, with many Rust applications linking against popular libraries such as OpenSSL, to security and safety-critical embedded systems, where subsystems such as cryptographic implementations are subject to industrial and governmental certification requirements. Direct interactions with such libraries, however, expose safe languages to significant risks: any single bug in either the foreign code or the cross-language interactions may arbitrarily violate the memory and/or type safety of the wrapping language. This talk presents Encapsulated Functions, an ongoing research project exploring how to secure cross-language interactions along with their differing guarantees and semantics around memory- and type-safety. At its core, Encapsulated Functions is a framework that combines memory protection mechanisms (such as the RISC-V Physical Memory Protection or Intel's Memory Protection Keys) with a set of portable types to both restrict and encapsulate behavior across the language boundary. Through the portability across different memory protection mechanisms we can utilize this infrastructure in both highly-restrictive embedded systems and applications running on conventional operating systems alike."
            linkedin="https://www.linkedin.com/in/lschuermann/"
            twitter=""
            mastodon=""
            github="https://github.com/lschuermann"
        />
        <SpeakerDetail
            name="Ulf Lilleengen"
            image="ulf.jpeg"
            title="Software engineer @ Akiles"
            talkTitle="Rust poisoning my wrist for fun"
            talkAbstract="The PineTime is an affordable and functional smartwatch with open-source firmware. Although several open-source RTOSes are available to run on it, nothing feels better than creating your own firmware and running it every day. This talk presents my journey of creating this firmware, the tools I used, and the lessons learned. It demonstrates a real-world application using the Embassy project. The talk will go through the following topics, showing code snippets along the way, accompanied by live demonstration where it makes sense. * Initial background motivation for the project * Explaining the the different phases of the project * Handling firmware updates (how and why I did this early). * Driving the screen (which crates I used to do it) * Driving the external flash (how to write a driver with embedded-hal) * Bootstrapping from Infinitime, potentially bricking my pinetime. * Lessons learned, what I would do differently. * Wishlist, what I think would improve the developer experience."
            linkedin="https://www.linkedin.com/in/lulf/"
            twitter="https://twitter.com/lulf"
            mastodon="https://hachyderm.io/@lulf"
            github="https://github.com/lulf"
        />
        <SpeakerDetail
            name="Sophia Turner"
            image="sophia.jpg"
            title="Language Architect"
            linkedin=""
            twitter="https://twitter.com/sophiajturner"
            mastodon="https://fosstodon.org/@sophiajt"
            github="https://github.com/sophiajt"
        />
    </Fragment>
</SpeakersLayout>
