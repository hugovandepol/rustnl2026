---
import CommonLayout from "../layouts/CommonLayout.astro";
import MainSchedule from "../components/schedule/MainSchedule.astro";
import Button from "../components/Button.astro";
import OneColumnText from "../components/OneColumnText.astro";
import { library, icon } from "@fortawesome/fontawesome-svg-core";
import { faLocationDot, faClock } from "@fortawesome/free-solid-svg-icons";
import Divider from "../components/Divider.astro";

library.add(faLocationDot, faClock);
const clockIcon = icon({ prefix: "fas", iconName: faClock.iconName });

const tracks = await Astro.glob("../pages/events/tracks/*.md");
tracks.sort(
    (a, b) =>
        Date.parse(b.frontmatter.dates[0]) - Date.parse(a.frontmatter.date),
);
---

<CommonLayout title="Overview" header="Overview">
    <section class="overview new-container space-y-12">
        <OneColumnText>
            <p>
                The following is a schedule of all events throughout the week.
                Below you can find a brief explanation of each.
            </p>
        </OneColumnText>

        <MainSchedule />

        <OneColumnText>
            <div class="event">
                <h2>Tue+Wed: Conference days</h2>
                <p>
                    The conference is a 2-day event on Tuesday and Wednesday,
                    with talks in various tracks:
                </p>
            </div>
            {
                tracks.map((track: any) => (
                    <div class="event">
                        <h3>{track.frontmatter.title}</h3>
                        {track.frontmatter.dates.map((date: string) => (
                            <div class="date-time">
                                <div class="icon">
                                    <Fragment set:html={clockIcon.html} />
                                </div>
                                <span>
                                    {new Date(date).toLocaleDateString(
                                        "en-EN",
                                        { weekday: "short" },
                                    ) +
                                        " " +
                                        track.frontmatter.startTime}
                                </span>
                            </div>
                        ))}
                        <div set:html={track.compiledContent()} />
                        {track.frontmatter.detailLink && (
                            <div>
                                <a href={track.frontmatter.detailLink}>More details</a>
                            </div>
                        )}
                        {track.frontmatter.scheduleLink && (
                            <div>
                                <a href={track.frontmatter.scheduleLink}>Find in schedule</a>
                            </div>
                        )}
                    </div>
                ))
            }
        </OneColumnText>
    </section>
</CommonLayout>

<style lang="scss">
    .event {
        margin-block-start: 3rem;
        .date-time {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
    }

    // the page currently has a nested new-container; the padding is added twice
    .overview.new-container {
        padding-inline: 0;
    }
</style>
